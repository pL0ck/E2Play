using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.Net.NetworkInformation;
using System.Windows.Forms;

namespace E2Play
{
    public class Pieces
    {
        enum PieceType
        {
            Corner = 0,
            Edge = 1,
            Internal = 2,
            Clue = 3
        }

        struct PData
        {
            public int Num;
            public int Type;
            public int InUse;
            public int Top;
            public int Right;
            public int Bottom;
            public int Left;
        }
        readonly int TileSizeBig = 48;
        readonly int TileSizeSmall = 32;

        PData PieceData;
        private static bool ImagesBuilt;


        // Store our 32x32 and 48x48 images in 2 separate image lists
        private static ImageList SmallImages = new ImageList();
        private static ImageList LargeImages = new ImageList();
        
        private bool BigBoard;

        private static int[,] PieceFormat = new int[1024, 7] {{1,0,0,1,4,0,0},{2,0,0,1,2,0,0},{3,0,0,3,4,0,0},{4,0,0,4,3,0,0},{5,1,0,6,1,0,1},{6,1,0,19,3,0,1},{7,1,0,16,1,0,1},{8,1,0,16,5,0,1},{9,1,0,20,4,0,1},{10,1,0,9,2,0,1},{11,1,0,8,3,0,1},{12,1,0,22,2,0,1},{13,1,0,22,5,0,1},{14,1,0,11,2,0,1},{15,1,0,19,1,0,3},{16,1,0,15,4,0,3},
{17,1,0,21,5,0,3},{18,1,0,13,5,0,3},{19,1,0,9,3,0,3},{20,1,0,8,3,0,3},{21,1,0,12,2,0,3},{22,1,0,10,1,0,3},{23,1,0,10,5,0,3},{24,1,0,14,1,0,3},{25,1,0,11,1,0,3},{26,1,0,6,3,0,4},{27,1,0,6,4,0,4},{28,1,0,19,4,0,4},{29,1,0,15,4,0,4},{30,1,0,9,5,0,4},{31,1,0,8,3,0,4},{32,1,0,14,4,0,4},
{33,1,0,22,3,0,4},{34,1,0,22,2,0,4},{35,1,0,7,5,0,4},{36,1,0,17,2,0,4},{37,1,0,15,1,0,2},{38,1,0,18,5,0,2},{39,1,0,20,5,0,2},{40,1,0,13,3,0,2},{41,1,0,13,4,0,2},{42,1,0,8,1,0,2},{43,1,0,8,3,0,2},{44,1,0,8,4,0,2},{45,1,0,12,1,0,2},{46,1,0,14,2,0,2},{47,1,0,22,2,0,2},{48,1,0,7,2,0,2},
{49,1,0,6,5,0,5},{50,1,0,19,1,0,5},{51,1,0,19,3,0,5},{52,1,0,16,1,0,5},{53,1,0,9,2,0,5},{54,1,0,12,2,0,5},{55,1,0,12,5,0,5},{56,1,0,22,4,0,5},{57,1,0,7,1,0,5},{58,1,0,7,5,0,5},{59,1,0,11,3,0,5},{60,1,0,17,4,0,5},{61,2,0,16,15,6,6},{62,2,0,21,9,6,6},{63,2,0,19,18,6,19},{64,2,0,6,22,6,15},
{65,2,0,15,17,6,15},{66,2,0,21,21,6,15},{67,2,0,20,19,6,15},{68,2,0,14,16,6,15},{69,2,0,17,22,6,15},{70,2,0,18,9,6,18},{71,2,0,9,10,6,18},{72,2,0,21,15,6,20},{73,2,0,8,12,6,20},{74,2,0,14,8,6,20},{75,2,0,22,18,6,20},{76,2,0,21,8,6,13},{77,2,0,13,8,6,13},{78,2,0,18,7,6,9},{79,2,0,14,18,6,9},{80,2,0,7,11,6,9},
{81,2,0,13,15,6,8},{82,2,0,15,15,6,12},{83,2,0,20,12,6,12},{84,2,0,15,13,6,10},{85,2,0,16,21,6,10},{86,2,0,22,10,6,10},{87,2,0,7,14,6,10},{88,2,0,6,11,6,14},{89,2,0,16,17,6,14},{90,2,0,12,7,6,14},{91,2,0,20,10,6,22},{92,2,0,13,8,6,22},{93,2,0,13,12,6,22},{94,2,0,12,11,6,22},{95,2,0,10,21,6,22},{96,2,0,11,18,6,11},
{97,2,0,12,13,6,17},{98,2,0,14,22,6,17},{99,2,0,11,16,6,17},{100,2,0,17,11,6,17},{101,2,0,10,8,19,19},{102,2,0,10,7,19,19},{103,2,0,7,13,19,19},{104,2,0,17,16,19,19},{105,2,0,12,8,19,15},{106,2,0,18,22,19,16},{107,2,0,13,22,19,16},{108,2,0,12,8,19,16},{109,2,0,7,20,19,16},{110,2,0,8,10,19,21},{111,2,0,10,8,19,21},{112,2,0,14,13,19,18},
{113,2,0,14,7,19,18},{114,2,0,21,12,19,20},{115,2,0,9,10,19,20},{116,2,0,10,20,19,20},{117,2,0,17,7,19,20},{118,2,0,18,11,19,13},{119,2,0,7,10,19,9},{120,2,0,22,17,19,8},{121,2,0,21,17,19,12},{122,2,0,16,7,19,14},{123,2,0,21,13,19,14},{124,2,0,14,8,19,14},{125,2,0,10,17,19,22},{126,2,0,11,8,19,22},{127,2,0,21,16,19,7},{128,2,0,13,11,19,7},
{129,2,0,12,18,19,7},{130,2,0,14,22,19,7},{131,2,0,16,14,19,11},{132,2,0,10,21,19,11},{133,2,0,21,7,19,17},{134,2,0,20,12,19,17},{135,2,0,12,18,19,17},{136,2,0,7,14,19,17},{137,2,0,14,9,15,15},{138,2,0,16,18,15,16},{139,3,0,16,20,15,16},{140,2,0,16,10,15,16},{141,2,0,13,11,15,16},{142,2,0,8,16,15,16},{143,2,0,7,10,15,16},{144,2,0,11,11,15,16},
{145,2,0,18,12,15,21},{146,2,0,15,10,15,18},{147,2,0,15,17,15,18},{148,2,0,18,21,15,18},{149,2,0,8,10,15,18},{150,2,0,16,20,15,13},{151,2,0,12,17,15,13},{152,2,0,20,20,15,9},{153,2,0,20,13,15,9},{154,2,0,17,7,15,9},{155,2,0,9,9,15,12},{156,2,0,9,10,15,12},{157,2,0,17,9,15,12},{158,2,0,9,7,15,14},{159,2,0,22,16,15,14},{160,2,0,11,11,15,22},
{161,2,0,16,14,15,7},{162,2,0,21,14,15,7},{163,2,0,8,20,15,17},{164,2,0,12,7,15,17},{165,2,0,18,12,16,21},{166,2,0,12,22,16,21},{167,2,0,18,18,16,20},{168,2,0,20,8,16,13},{169,2,0,13,11,16,13},{170,2,0,12,22,16,9},{171,2,0,14,7,16,9},{172,2,0,11,20,16,9},{173,2,0,8,8,16,8},{174,2,0,10,14,16,8},{175,2,0,9,11,16,12},{176,2,0,9,13,16,10},
{177,2,0,21,12,16,14},{178,2,0,10,7,16,22},{179,2,0,22,8,16,22},{180,2,0,9,7,16,7},{181,3,0,20,7,16,11},{182,2,0,9,20,16,11},{183,2,0,13,22,21,21},{184,2,0,17,9,21,18},{185,2,0,13,10,21,20},{186,2,0,22,22,21,20},{187,2,0,11,9,21,13},{188,2,0,21,11,21,9},{189,2,0,18,13,21,9},{190,2,0,7,13,21,9},{191,2,0,18,18,21,8},{192,2,0,8,14,21,8},
{193,2,0,20,9,21,12},{194,2,0,11,20,21,10},{195,2,0,11,17,21,10},{196,2,0,17,8,21,10},{197,2,0,20,17,21,14},{198,2,0,13,22,21,14},{199,2,0,14,14,21,14},{200,2,0,13,18,21,22},{201,2,0,11,22,21,7},{202,2,0,17,9,21,7},{203,2,0,10,13,21,11},{204,2,0,10,22,21,11},{205,2,0,7,18,21,11},{206,2,0,17,11,21,11},{207,2,0,17,9,18,18},{208,3,0,13,17,18,20},
{209,2,0,22,8,18,20},{210,2,0,20,13,18,9},{211,2,0,7,8,18,9},{212,2,0,18,7,18,8},{213,2,0,22,22,18,12},{214,2,0,18,14,18,10},{215,2,0,12,17,18,10},{216,2,0,17,11,18,10},{217,2,0,13,8,18,14},{218,2,0,12,10,18,7},{219,2,0,20,12,18,11},{220,2,0,20,7,18,17},{221,2,0,11,11,18,17},{222,2,0,11,17,18,17},{223,2,0,10,17,20,20},{224,2,0,14,9,20,20},
{225,2,0,7,8,20,20},{226,2,0,13,8,20,9},{227,2,0,10,10,20,9},{228,2,0,13,22,20,12},{229,2,0,9,17,20,14},{230,2,0,7,22,20,14},{231,2,0,10,14,20,22},{232,2,0,10,11,20,22},{233,2,0,13,14,13,13},{234,2,0,7,12,13,9},{235,2,0,9,12,13,12},{236,2,0,9,14,13,12},{237,2,0,10,8,13,12},{238,2,0,12,7,13,10},{239,2,0,8,17,13,14},{240,2,0,11,8,13,14},
{241,2,0,9,11,13,22},{242,2,0,12,11,13,22},{243,2,0,8,10,9,8},{244,2,0,14,22,9,8},{245,2,0,17,14,9,12},{246,2,0,7,17,9,11},{247,2,0,11,17,8,8},{248,2,0,10,12,8,12},{249,3,0,12,11,8,10},{250,2,0,7,11,8,14},{251,2,0,17,22,12,12},{252,2,0,22,10,12,10},{253,2,0,7,14,10,22},{254,2,0,11,7,14,7},{255,3,0,7,17,14,17},{256,2,0,11,17,22,17},
{257,0,0,0,1,4,0},{258,0,0,0,1,2,0},{259,0,0,0,3,4,0},{260,0,0,0,4,3,0},{261,1,0,1,6,1,0},{262,1,0,1,19,3,0},{263,1,0,1,16,1,0},{264,1,0,1,16,5,0},{265,1,0,1,20,4,0},{266,1,0,1,9,2,0},{267,1,0,1,8,3,0},{268,1,0,1,22,2,0},{269,1,0,1,22,5,0},{270,1,0,1,11,2,0},{271,1,0,3,19,1,0},{272,1,0,3,15,4,0},
{273,1,0,3,21,5,0},{274,1,0,3,13,5,0},{275,1,0,3,9,3,0},{276,1,0,3,8,3,0},{277,1,0,3,12,2,0},{278,1,0,3,10,1,0},{279,1,0,3,10,5,0},{280,1,0,3,14,1,0},{281,1,0,3,11,1,0},{282,1,0,4,6,3,0},{283,1,0,4,6,4,0},{284,1,0,4,19,4,0},{285,1,0,4,15,4,0},{286,1,0,4,9,5,0},{287,1,0,4,8,3,0},{288,1,0,4,14,4,0},
{289,1,0,4,22,3,0},{290,1,0,4,22,2,0},{291,1,0,4,7,5,0},{292,1,0,4,17,2,0},{293,1,0,2,15,1,0},{294,1,0,2,18,5,0},{295,1,0,2,20,5,0},{296,1,0,2,13,3,0},{297,1,0,2,13,4,0},{298,1,0,2,8,1,0},{299,1,0,2,8,3,0},{300,1,0,2,8,4,0},{301,1,0,2,12,1,0},{302,1,0,2,14,2,0},{303,1,0,2,22,2,0},{304,1,0,2,7,2,0},
{305,1,0,5,6,5,0},{306,1,0,5,19,1,0},{307,1,0,5,19,3,0},{308,1,0,5,16,1,0},{309,1,0,5,9,2,0},{310,1,0,5,12,2,0},{311,1,0,5,12,5,0},{312,1,0,5,22,4,0},{313,1,0,5,7,1,0},{314,1,0,5,7,5,0},{315,1,0,5,11,3,0},{316,1,0,5,17,4,0},{317,2,0,6,16,15,6},{318,2,0,6,21,9,6},{319,2,0,19,19,18,6},{320,2,0,15,6,22,6},
{321,2,0,15,15,17,6},{322,2,0,15,21,21,6},{323,2,0,15,20,19,6},{324,2,0,15,14,16,6},{325,2,0,15,17,22,6},{326,2,0,18,18,9,6},{327,2,0,18,9,10,6},{328,2,0,20,21,15,6},{329,2,0,20,8,12,6},{330,2,0,20,14,8,6},{331,2,0,20,22,18,6},{332,2,0,13,21,8,6},{333,2,0,13,13,8,6},{334,2,0,9,18,7,6},{335,2,0,9,14,18,6},{336,2,0,9,7,11,6},
{337,2,0,8,13,15,6},{338,2,0,12,15,15,6},{339,2,0,12,20,12,6},{340,2,0,10,15,13,6},{341,2,0,10,16,21,6},{342,2,0,10,22,10,6},{343,2,0,10,7,14,6},{344,2,0,14,6,11,6},{345,2,0,14,16,17,6},{346,2,0,14,12,7,6},{347,2,0,22,20,10,6},{348,2,0,22,13,8,6},{349,2,0,22,13,12,6},{350,2,0,22,12,11,6},{351,2,0,22,10,21,6},{352,2,0,11,11,18,6},
{353,2,0,17,12,13,6},{354,2,0,17,14,22,6},{355,2,0,17,11,16,6},{356,2,0,17,17,11,6},{357,2,0,19,10,8,19},{358,2,0,19,10,7,19},{359,2,0,19,7,13,19},{360,2,0,19,17,16,19},{361,2,0,15,12,8,19},{362,2,0,16,18,22,19},{363,2,0,16,13,22,19},{364,2,0,16,12,8,19},{365,2,0,16,7,20,19},{366,2,0,21,8,10,19},{367,2,0,21,10,8,19},{368,2,0,18,14,13,19},
{369,2,0,18,14,7,19},{370,2,0,20,21,12,19},{371,2,0,20,9,10,19},{372,2,0,20,10,20,19},{373,2,0,20,17,7,19},{374,2,0,13,18,11,19},{375,2,0,9,7,10,19},{376,2,0,8,22,17,19},{377,2,0,12,21,17,19},{378,2,0,14,16,7,19},{379,2,0,14,21,13,19},{380,2,0,14,14,8,19},{381,2,0,22,10,17,19},{382,2,0,22,11,8,19},{383,2,0,7,21,16,19},{384,2,0,7,13,11,19},
{385,2,0,7,12,18,19},{386,2,0,7,14,22,19},{387,2,0,11,16,14,19},{388,2,0,11,10,21,19},{389,2,0,17,21,7,19},{390,2,0,17,20,12,19},{391,2,0,17,12,18,19},{392,2,0,17,7,14,19},{393,2,0,15,14,9,15},{394,2,0,16,16,18,15},{395,3,0,16,16,20,15},{396,2,0,16,16,10,15},{397,2,0,16,13,11,15},{398,2,0,16,8,16,15},{399,2,0,16,7,10,15},{400,2,0,16,11,11,15},
{401,2,0,21,18,12,15},{402,2,0,18,15,10,15},{403,2,0,18,15,17,15},{404,2,0,18,18,21,15},{405,2,0,18,8,10,15},{406,2,0,13,16,20,15},{407,2,0,13,12,17,15},{408,2,0,9,20,20,15},{409,2,0,9,20,13,15},{410,2,0,9,17,7,15},{411,2,0,12,9,9,15},{412,2,0,12,9,10,15},{413,2,0,12,17,9,15},{414,2,0,14,9,7,15},{415,2,0,14,22,16,15},{416,2,0,22,11,11,15},
{417,2,0,7,16,14,15},{418,2,0,7,21,14,15},{419,2,0,17,8,20,15},{420,2,0,17,12,7,15},{421,2,0,21,18,12,16},{422,2,0,21,12,22,16},{423,2,0,20,18,18,16},{424,2,0,13,20,8,16},{425,2,0,13,13,11,16},{426,2,0,9,12,22,16},{427,2,0,9,14,7,16},{428,2,0,9,11,20,16},{429,2,0,8,8,8,16},{430,2,0,8,10,14,16},{431,2,0,12,9,11,16},{432,2,0,10,9,13,16},
{433,2,0,14,21,12,16},{434,2,0,22,10,7,16},{435,2,0,22,22,8,16},{436,2,0,7,9,7,16},{437,3,0,11,20,7,16},{438,2,0,11,9,20,16},{439,2,0,21,13,22,21},{440,2,0,18,17,9,21},{441,2,0,20,13,10,21},{442,2,0,20,22,22,21},{443,2,0,13,11,9,21},{444,2,0,9,21,11,21},{445,2,0,9,18,13,21},{446,2,0,9,7,13,21},{447,2,0,8,18,18,21},{448,2,0,8,8,14,21},
{449,2,0,12,20,9,21},{450,2,0,10,11,20,21},{451,2,0,10,11,17,21},{452,2,0,10,17,8,21},{453,2,0,14,20,17,21},{454,2,0,14,13,22,21},{455,2,0,14,14,14,21},{456,2,0,22,13,18,21},{457,2,0,7,11,22,21},{458,2,0,7,17,9,21},{459,2,0,11,10,13,21},{460,2,0,11,10,22,21},{461,2,0,11,7,18,21},{462,2,0,11,17,11,21},{463,2,0,18,17,9,18},{464,3,0,20,13,17,18},
{465,2,0,20,22,8,18},{466,2,0,9,20,13,18},{467,2,0,9,7,8,18},{468,2,0,8,18,7,18},{469,2,0,12,22,22,18},{470,2,0,10,18,14,18},{471,2,0,10,12,17,18},{472,2,0,10,17,11,18},{473,2,0,14,13,8,18},{474,2,0,7,12,10,18},{475,2,0,11,20,12,18},{476,2,0,17,20,7,18},{477,2,0,17,11,11,18},{478,2,0,17,11,17,18},{479,2,0,20,10,17,20},{480,2,0,20,14,9,20},
{481,2,0,20,7,8,20},{482,2,0,9,13,8,20},{483,2,0,9,10,10,20},{484,2,0,12,13,22,20},{485,2,0,14,9,17,20},{486,2,0,14,7,22,20},{487,2,0,22,10,14,20},{488,2,0,22,10,11,20},{489,2,0,13,13,14,13},{490,2,0,9,7,12,13},{491,2,0,12,9,12,13},{492,2,0,12,9,14,13},{493,2,0,12,10,8,13},{494,2,0,10,12,7,13},{495,2,0,14,8,17,13},{496,2,0,14,11,8,13},
{497,2,0,22,9,11,13},{498,2,0,22,12,11,13},{499,2,0,8,8,10,9},{500,2,0,8,14,22,9},{501,2,0,12,17,14,9},{502,2,0,11,7,17,9},{503,2,0,8,11,17,8},{504,2,0,12,10,12,8},{505,3,0,10,12,11,8},{506,2,0,14,7,11,8},{507,2,0,12,17,22,12},{508,2,0,10,22,10,12},{509,2,0,22,7,14,10},{510,2,0,7,11,7,14},{511,3,0,17,7,17,14},{512,2,0,17,11,17,22},
{513,0,0,0,0,1,4},{514,0,0,0,0,1,2},{515,0,0,0,0,3,4},{516,0,0,0,0,4,3},{517,1,0,0,1,6,1},{518,1,0,0,1,19,3},{519,1,0,0,1,16,1},{520,1,0,0,1,16,5},{521,1,0,0,1,20,4},{522,1,0,0,1,9,2},{523,1,0,0,1,8,3},{524,1,0,0,1,22,2},{525,1,0,0,1,22,5},{526,1,0,0,1,11,2},{527,1,0,0,3,19,1},{528,1,0,0,3,15,4},
{529,1,0,0,3,21,5},{530,1,0,0,3,13,5},{531,1,0,0,3,9,3},{532,1,0,0,3,8,3},{533,1,0,0,3,12,2},{534,1,0,0,3,10,1},{535,1,0,0,3,10,5},{536,1,0,0,3,14,1},{537,1,0,0,3,11,1},{538,1,0,0,4,6,3},{539,1,0,0,4,6,4},{540,1,0,0,4,19,4},{541,1,0,0,4,15,4},{542,1,0,0,4,9,5},{543,1,0,0,4,8,3},{544,1,0,0,4,14,4},
{545,1,0,0,4,22,3},{546,1,0,0,4,22,2},{547,1,0,0,4,7,5},{548,1,0,0,4,17,2},{549,1,0,0,2,15,1},{550,1,0,0,2,18,5},{551,1,0,0,2,20,5},{552,1,0,0,2,13,3},{553,1,0,0,2,13,4},{554,1,0,0,2,8,1},{555,1,0,0,2,8,3},{556,1,0,0,2,8,4},{557,1,0,0,2,12,1},{558,1,0,0,2,14,2},{559,1,0,0,2,22,2},{560,1,0,0,2,7,2},
{561,1,0,0,5,6,5},{562,1,0,0,5,19,1},{563,1,0,0,5,19,3},{564,1,0,0,5,16,1},{565,1,0,0,5,9,2},{566,1,0,0,5,12,2},{567,1,0,0,5,12,5},{568,1,0,0,5,22,4},{569,1,0,0,5,7,1},{570,1,0,0,5,7,5},{571,1,0,0,5,11,3},{572,1,0,0,5,17,4},{573,2,0,6,6,16,15},{574,2,0,6,6,21,9},{575,2,0,6,19,19,18},{576,2,0,6,15,6,22},
{577,2,0,6,15,15,17},{578,2,0,6,15,21,21},{579,2,0,6,15,20,19},{580,2,0,6,15,14,16},{581,2,0,6,15,17,22},{582,2,0,6,18,18,9},{583,2,0,6,18,9,10},{584,2,0,6,20,21,15},{585,2,0,6,20,8,12},{586,2,0,6,20,14,8},{587,2,0,6,20,22,18},{588,2,0,6,13,21,8},{589,2,0,6,13,13,8},{590,2,0,6,9,18,7},{591,2,0,6,9,14,18},{592,2,0,6,9,7,11},
{593,2,0,6,8,13,15},{594,2,0,6,12,15,15},{595,2,0,6,12,20,12},{596,2,0,6,10,15,13},{597,2,0,6,10,16,21},{598,2,0,6,10,22,10},{599,2,0,6,10,7,14},{600,2,0,6,14,6,11},{601,2,0,6,14,16,17},{602,2,0,6,14,12,7},{603,2,0,6,22,20,10},{604,2,0,6,22,13,8},{605,2,0,6,22,13,12},{606,2,0,6,22,12,11},{607,2,0,6,22,10,21},{608,2,0,6,11,11,18},
{609,2,0,6,17,12,13},{610,2,0,6,17,14,22},{611,2,0,6,17,11,16},{612,2,0,6,17,17,11},{613,2,0,19,19,10,8},{614,2,0,19,19,10,7},{615,2,0,19,19,7,13},{616,2,0,19,19,17,16},{617,2,0,19,15,12,8},{618,2,0,19,16,18,22},{619,2,0,19,16,13,22},{620,2,0,19,16,12,8},{621,2,0,19,16,7,20},{622,2,0,19,21,8,10},{623,2,0,19,21,10,8},{624,2,0,19,18,14,13},
{625,2,0,19,18,14,7},{626,2,0,19,20,21,12},{627,2,0,19,20,9,10},{628,2,0,19,20,10,20},{629,2,0,19,20,17,7},{630,2,0,19,13,18,11},{631,2,0,19,9,7,10},{632,2,0,19,8,22,17},{633,2,0,19,12,21,17},{634,2,0,19,14,16,7},{635,2,0,19,14,21,13},{636,2,0,19,14,14,8},{637,2,0,19,22,10,17},{638,2,0,19,22,11,8},{639,2,0,19,7,21,16},{640,2,0,19,7,13,11},
{641,2,0,19,7,12,18},{642,2,0,19,7,14,22},{643,2,0,19,11,16,14},{644,2,0,19,11,10,21},{645,2,0,19,17,21,7},{646,2,0,19,17,20,12},{647,2,0,19,17,12,18},{648,2,0,19,17,7,14},{649,2,0,15,15,14,9},{650,2,0,15,16,16,18},{651,3,0,15,16,16,20},{652,2,0,15,16,16,10},{653,2,0,15,16,13,11},{654,2,0,15,16,8,16},{655,2,0,15,16,7,10},{656,2,0,15,16,11,11},
{657,2,0,15,21,18,12},{658,2,0,15,18,15,10},{659,2,0,15,18,15,17},{660,2,0,15,18,18,21},{661,2,0,15,18,8,10},{662,2,0,15,13,16,20},{663,2,0,15,13,12,17},{664,2,0,15,9,20,20},{665,2,0,15,9,20,13},{666,2,0,15,9,17,7},{667,2,0,15,12,9,9},{668,2,0,15,12,9,10},{669,2,0,15,12,17,9},{670,2,0,15,14,9,7},{671,2,0,15,14,22,16},{672,2,0,15,22,11,11},
{673,2,0,15,7,16,14},{674,2,0,15,7,21,14},{675,2,0,15,17,8,20},{676,2,0,15,17,12,7},{677,2,0,16,21,18,12},{678,2,0,16,21,12,22},{679,2,0,16,20,18,18},{680,2,0,16,13,20,8},{681,2,0,16,13,13,11},{682,2,0,16,9,12,22},{683,2,0,16,9,14,7},{684,2,0,16,9,11,20},{685,2,0,16,8,8,8},{686,2,0,16,8,10,14},{687,2,0,16,12,9,11},{688,2,0,16,10,9,13},
{689,2,0,16,14,21,12},{690,2,0,16,22,10,7},{691,2,0,16,22,22,8},{692,2,0,16,7,9,7},{693,3,0,16,11,20,7},{694,2,0,16,11,9,20},{695,2,0,21,21,13,22},{696,2,0,21,18,17,9},{697,2,0,21,20,13,10},{698,2,0,21,20,22,22},{699,2,0,21,13,11,9},{700,2,0,21,9,21,11},{701,2,0,21,9,18,13},{702,2,0,21,9,7,13},{703,2,0,21,8,18,18},{704,2,0,21,8,8,14},
{705,2,0,21,12,20,9},{706,2,0,21,10,11,20},{707,2,0,21,10,11,17},{708,2,0,21,10,17,8},{709,2,0,21,14,20,17},{710,2,0,21,14,13,22},{711,2,0,21,14,14,14},{712,2,0,21,22,13,18},{713,2,0,21,7,11,22},{714,2,0,21,7,17,9},{715,2,0,21,11,10,13},{716,2,0,21,11,10,22},{717,2,0,21,11,7,18},{718,2,0,21,11,17,11},{719,2,0,18,18,17,9},{720,3,0,18,20,13,17},
{721,2,0,18,20,22,8},{722,2,0,18,9,20,13},{723,2,0,18,9,7,8},{724,2,0,18,8,18,7},{725,2,0,18,12,22,22},{726,2,0,18,10,18,14},{727,2,0,18,10,12,17},{728,2,0,18,10,17,11},{729,2,0,18,14,13,8},{730,2,0,18,7,12,10},{731,2,0,18,11,20,12},{732,2,0,18,17,20,7},{733,2,0,18,17,11,11},{734,2,0,18,17,11,17},{735,2,0,20,20,10,17},{736,2,0,20,20,14,9},
{737,2,0,20,20,7,8},{738,2,0,20,9,13,8},{739,2,0,20,9,10,10},{740,2,0,20,12,13,22},{741,2,0,20,14,9,17},{742,2,0,20,14,7,22},{743,2,0,20,22,10,14},{744,2,0,20,22,10,11},{745,2,0,13,13,13,14},{746,2,0,13,9,7,12},{747,2,0,13,12,9,12},{748,2,0,13,12,9,14},{749,2,0,13,12,10,8},{750,2,0,13,10,12,7},{751,2,0,13,14,8,17},{752,2,0,13,14,11,8},
{753,2,0,13,22,9,11},{754,2,0,13,22,12,11},{755,2,0,9,8,8,10},{756,2,0,9,8,14,22},{757,2,0,9,12,17,14},{758,2,0,9,11,7,17},{759,2,0,8,8,11,17},{760,2,0,8,12,10,12},{761,3,0,8,10,12,11},{762,2,0,8,14,7,11},{763,2,0,12,12,17,22},{764,2,0,12,10,22,10},{765,2,0,10,22,7,14},{766,2,0,14,7,11,7},{767,3,0,14,17,7,17},{768,2,0,22,17,11,17},
{769,0,0,4,0,0,1},{770,0,0,2,0,0,1},{771,0,0,4,0,0,3},{772,0,0,3,0,0,4},{773,1,0,1,0,1,6},{774,1,0,3,0,1,19},{775,1,0,1,0,1,16},{776,1,0,5,0,1,16},{777,1,0,4,0,1,20},{778,1,0,2,0,1,9},{779,1,0,3,0,1,8},{780,1,0,2,0,1,22},{781,1,0,5,0,1,22},{782,1,0,2,0,1,11},{783,1,0,1,0,3,19},{784,1,0,4,0,3,15},
{785,1,0,5,0,3,21},{786,1,0,5,0,3,13},{787,1,0,3,0,3,9},{788,1,0,3,0,3,8},{789,1,0,2,0,3,12},{790,1,0,1,0,3,10},{791,1,0,5,0,3,10},{792,1,0,1,0,3,14},{793,1,0,1,0,3,11},{794,1,0,3,0,4,6},{795,1,0,4,0,4,6},{796,1,0,4,0,4,19},{797,1,0,4,0,4,15},{798,1,0,5,0,4,9},{799,1,0,3,0,4,8},{800,1,0,4,0,4,14},
{801,1,0,3,0,4,22},{802,1,0,2,0,4,22},{803,1,0,5,0,4,7},{804,1,0,2,0,4,17},{805,1,0,1,0,2,15},{806,1,0,5,0,2,18},{807,1,0,5,0,2,20},{808,1,0,3,0,2,13},{809,1,0,4,0,2,13},{810,1,0,1,0,2,8},{811,1,0,3,0,2,8},{812,1,0,4,0,2,8},{813,1,0,1,0,2,12},{814,1,0,2,0,2,14},{815,1,0,2,0,2,22},{816,1,0,2,0,2,7},
{817,1,0,5,0,5,6},{818,1,0,1,0,5,19},{819,1,0,3,0,5,19},{820,1,0,1,0,5,16},{821,1,0,2,0,5,9},{822,1,0,2,0,5,12},{823,1,0,5,0,5,12},{824,1,0,4,0,5,22},{825,1,0,1,0,5,7},{826,1,0,5,0,5,7},{827,1,0,3,0,5,11},{828,1,0,4,0,5,17},{829,2,0,15,6,6,16},{830,2,0,9,6,6,21},{831,2,0,18,6,19,19},{832,2,0,22,6,15,6},
{833,2,0,17,6,15,15},{834,2,0,21,6,15,21},{835,2,0,19,6,15,20},{836,2,0,16,6,15,14},{837,2,0,22,6,15,17},{838,2,0,9,6,18,18},{839,2,0,10,6,18,9},{840,2,0,15,6,20,21},{841,2,0,12,6,20,8},{842,2,0,8,6,20,14},{843,2,0,18,6,20,22},{844,2,0,8,6,13,21},{845,2,0,8,6,13,13},{846,2,0,7,6,9,18},{847,2,0,18,6,9,14},{848,2,0,11,6,9,7},
{849,2,0,15,6,8,13},{850,2,0,15,6,12,15},{851,2,0,12,6,12,20},{852,2,0,13,6,10,15},{853,2,0,21,6,10,16},{854,2,0,10,6,10,22},{855,2,0,14,6,10,7},{856,2,0,11,6,14,6},{857,2,0,17,6,14,16},{858,2,0,7,6,14,12},{859,2,0,10,6,22,20},{860,2,0,8,6,22,13},{861,2,0,12,6,22,13},{862,2,0,11,6,22,12},{863,2,0,21,6,22,10},{864,2,0,18,6,11,11},
{865,2,0,13,6,17,12},{866,2,0,22,6,17,14},{867,2,0,16,6,17,11},{868,2,0,11,6,17,17},{869,2,0,8,19,19,10},{870,2,0,7,19,19,10},{871,2,0,13,19,19,7},{872,2,0,16,19,19,17},{873,2,0,8,19,15,12},{874,2,0,22,19,16,18},{875,2,0,22,19,16,13},{876,2,0,8,19,16,12},{877,2,0,20,19,16,7},{878,2,0,10,19,21,8},{879,2,0,8,19,21,10},{880,2,0,13,19,18,14},
{881,2,0,7,19,18,14},{882,2,0,12,19,20,21},{883,2,0,10,19,20,9},{884,2,0,20,19,20,10},{885,2,0,7,19,20,17},{886,2,0,11,19,13,18},{887,2,0,10,19,9,7},{888,2,0,17,19,8,22},{889,2,0,17,19,12,21},{890,2,0,7,19,14,16},{891,2,0,13,19,14,21},{892,2,0,8,19,14,14},{893,2,0,17,19,22,10},{894,2,0,8,19,22,11},{895,2,0,16,19,7,21},{896,2,0,11,19,7,13},
{897,2,0,18,19,7,12},{898,2,0,22,19,7,14},{899,2,0,14,19,11,16},{900,2,0,21,19,11,10},{901,2,0,7,19,17,21},{902,2,0,12,19,17,20},{903,2,0,18,19,17,12},{904,2,0,14,19,17,7},{905,2,0,9,15,15,14},{906,2,0,18,15,16,16},{907,3,0,20,15,16,16},{908,2,0,10,15,16,16},{909,2,0,11,15,16,13},{910,2,0,16,15,16,8},{911,2,0,10,15,16,7},{912,2,0,11,15,16,11},
{913,2,0,12,15,21,18},{914,2,0,10,15,18,15},{915,2,0,17,15,18,15},{916,2,0,21,15,18,18},{917,2,0,10,15,18,8},{918,2,0,20,15,13,16},{919,2,0,17,15,13,12},{920,2,0,20,15,9,20},{921,2,0,13,15,9,20},{922,2,0,7,15,9,17},{923,2,0,9,15,12,9},{924,2,0,10,15,12,9},{925,2,0,9,15,12,17},{926,2,0,7,15,14,9},{927,2,0,16,15,14,22},{928,2,0,11,15,22,11},
{929,2,0,14,15,7,16},{930,2,0,14,15,7,21},{931,2,0,20,15,17,8},{932,2,0,7,15,17,12},{933,2,0,12,16,21,18},{934,2,0,22,16,21,12},{935,2,0,18,16,20,18},{936,2,0,8,16,13,20},{937,2,0,11,16,13,13},{938,2,0,22,16,9,12},{939,2,0,7,16,9,14},{940,2,0,20,16,9,11},{941,2,0,8,16,8,8},{942,2,0,14,16,8,10},{943,2,0,11,16,12,9},{944,2,0,13,16,10,9},
{945,2,0,12,16,14,21},{946,2,0,7,16,22,10},{947,2,0,8,16,22,22},{948,2,0,7,16,7,9},{949,3,0,7,16,11,20},{950,2,0,20,16,11,9},{951,2,0,22,21,21,13},{952,2,0,9,21,18,17},{953,2,0,10,21,20,13},{954,2,0,22,21,20,22},{955,2,0,9,21,13,11},{956,2,0,11,21,9,21},{957,2,0,13,21,9,18},{958,2,0,13,21,9,7},{959,2,0,18,21,8,18},{960,2,0,14,21,8,8},
{961,2,0,9,21,12,20},{962,2,0,20,21,10,11},{963,2,0,17,21,10,11},{964,2,0,8,21,10,17},{965,2,0,17,21,14,20},{966,2,0,22,21,14,13},{967,2,0,14,21,14,14},{968,2,0,18,21,22,13},{969,2,0,22,21,7,11},{970,2,0,9,21,7,17},{971,2,0,13,21,11,10},{972,2,0,22,21,11,10},{973,2,0,18,21,11,7},{974,2,0,11,21,11,17},{975,2,0,9,18,18,17},{976,3,0,17,18,20,13},
{977,2,0,8,18,20,22},{978,2,0,13,18,9,20},{979,2,0,8,18,9,7},{980,2,0,7,18,8,18},{981,2,0,22,18,12,22},{982,2,0,14,18,10,18},{983,2,0,17,18,10,12},{984,2,0,11,18,10,17},{985,2,0,8,18,14,13},{986,2,0,10,18,7,12},{987,2,0,12,18,11,20},{988,2,0,7,18,17,20},{989,2,0,11,18,17,11},{990,2,0,17,18,17,11},{991,2,0,17,20,20,10},{992,2,0,9,20,20,14},
{993,2,0,8,20,20,7},{994,2,0,8,20,9,13},{995,2,0,10,20,9,10},{996,2,0,22,20,12,13},{997,2,0,17,20,14,9},{998,2,0,22,20,14,7},{999,2,0,14,20,22,10},{1000,2,0,11,20,22,10},{1001,2,0,14,13,13,13},{1002,2,0,12,13,9,7},{1003,2,0,12,13,12,9},{1004,2,0,14,13,12,9},{1005,2,0,8,13,12,10},{1006,2,0,7,13,10,12},{1007,2,0,17,13,14,8},{1008,2,0,8,13,14,11},
{1009,2,0,11,13,22,9},{1010,2,0,11,13,22,12},{1011,2,0,10,9,8,8},{1012,2,0,22,9,8,14},{1013,2,0,14,9,12,17},{1014,2,0,17,9,11,7},{1015,2,0,17,8,8,11},{1016,2,0,12,8,12,10},{1017,3,0,11,8,10,12},{1018,2,0,11,8,14,7},{1019,2,0,22,12,12,17},{1020,2,0,10,12,10,22},{1021,2,0,14,10,22,7},{1022,2,0,7,14,7,11},{1023,3,0,17,14,17,7},{1024,2,0,17,22,17,11}}
;

        public Pieces(int TileSize)
        {
            if (ImagesBuilt)
                return;

            SmallImages.ImageSize = new Size(TileSizeSmall, TileSizeSmall);
            LargeImages.ImageSize = new Size(TileSizeBig, TileSizeBig);
            SmallImages.ColorDepth = ColorDepth.Depth32Bit;
            LargeImages.ColorDepth = ColorDepth.Depth32Bit;
            LargeImages.Images.Add(Properties.Resources.blank);
            SmallImages.Images.Add(ResizeImage(Properties.Resources.blank, TileSizeSmall, TileSizeSmall));

            BigBoard = TileSize == TileSizeBig;
            Console.WriteLine($"Images Built {ImagesBuilt}");


            //Build our image lists
            for (int i = 1; i < 1025; i++)
                BuildPiece(i);

            ImagesBuilt = true;
        }

        /// <summary>
        /// Resize the image to the specified width and height.
        /// </summary>
        /// <param name="image">The image to resize.</param>
        /// <param name="width">The width to resize to.</param>
        /// <param name="height">The height to resize to.</param>
        /// <returns>The resized image.</returns>
        private Bitmap ResizeImage(Image image, int width, int height)
        {
            var destRect = new Rectangle(0, 0, width, height);
            var destImage = new Bitmap(width, height);

            destImage.SetResolution(image.HorizontalResolution, image.VerticalResolution);

            using (var graphics = Graphics.FromImage(destImage))
            {
                graphics.CompositingMode = CompositingMode.SourceCopy;
                graphics.CompositingQuality = CompositingQuality.HighQuality;
                graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;
                graphics.SmoothingMode = SmoothingMode.HighQuality;
                graphics.PixelOffsetMode = PixelOffsetMode.HighQuality;

                using (var wrapMode = new ImageAttributes())
                {
                    wrapMode.SetWrapMode(WrapMode.TileFlipXY);
                    graphics.DrawImage(image, destRect, 0, 0, image.Width, image.Height, GraphicsUnit.Pixel, wrapMode);
                }
            }

            return destImage;
        }

        private void BuildPiece(int PieceNumber)
        {
            PieceNumber--;

            PieceData = new PData
            {
                Num = PieceFormat[PieceNumber, 0],
                Type = PieceFormat[PieceNumber, 1],
                InUse = PieceFormat[PieceNumber, 2],
                Top = PieceFormat[PieceNumber, 3],
                Right = PieceFormat[PieceNumber, 4],
                Bottom = PieceFormat[PieceNumber, 5],
                Left = PieceFormat[PieceNumber, 6]
            };

            //Build large images
            Bitmap Piece;
            Piece = new Bitmap(TileSizeBig, TileSizeBig);
            using (Graphics g = Graphics.FromImage(Piece))
            {
                g.DrawImage(GetPattern(PieceData.Top, 0), 0, 0);
                g.DrawImage(GetPattern(PieceData.Right, 1), TileSizeBig / 2, 0);
                g.DrawImage(GetPattern(PieceData.Bottom, 2), 0, TileSizeBig / 2);
                g.DrawImage(GetPattern(PieceData.Left, 3), 0, 0);
                LargeImages.Images.Add(Piece);
            }

            // Build small images
            Piece = new Bitmap(TileSizeBig, TileSizeBig);
            using (Graphics g = Graphics.FromImage(Piece))
            {
                g.DrawImage(GetPattern(PieceData.Top, 0), 0, 0);
                g.DrawImage(GetPattern(PieceData.Right, 1), TileSizeBig / 2, 0);
                g.DrawImage(GetPattern(PieceData.Bottom, 2), 0, TileSizeBig / 2);
                g.DrawImage(GetPattern(PieceData.Left, 3), 0, 0);
                SmallImages.Images.Add(Piece);
            }

        }

        public void TileSizeChanged(bool IsBig)
        {
            //We need to rebuild our images for the new board size
            BigBoard = IsBig;
            //for (int i = 0; i < 1024; i++)
            //{
            //    AllPieces[i] = BuildPiece(i + 1);
            //}
        }

        public Image GetPiece(int PieceNumber)
        {
            return  BigBoard  ? LargeImages.Images[PieceNumber] : SmallImages.Images[PieceNumber];
        }

        private Image GetPattern(int PatternNumber, int Rotate)
        {
            Image img = null;
            switch (PatternNumber)
            {
                case 0:
                    img = Properties.Resources._0;
                    break;
                case 1:
                    img = Properties.Resources._1;
                    break;
                case 2:
                    img = Properties.Resources._2;
                    break;
                case 3:
                    img = Properties.Resources._3;
                    break;
                case 4:
                    img = Properties.Resources._4;
                    break;
                case 5:
                    img = Properties.Resources._5;
                    break;
                case 6:
                    img = Properties.Resources._6;
                    break;
                case 7:
                    img = Properties.Resources._7;
                    break;
                case 8:
                    img = Properties.Resources._8;
                    break;
                case 9:
                    img = Properties.Resources._9;
                    break;
                case 10:
                    img = Properties.Resources._10;
                    break;
                case 11:
                    img = Properties.Resources._11;
                    break;
                case 12:
                    img = Properties.Resources._12;
                    break;
                case 13:
                    img = Properties.Resources._13;
                    break;
                case 14:
                    img = Properties.Resources._14;
                    break;
                case 15:
                    img = Properties.Resources._15;
                    break;
                case 16:
                    img = Properties.Resources._16;
                    break;
                case 17:
                    img = Properties.Resources._17;
                    break;
                case 18:
                    img = Properties.Resources._18;
                    break;
                case 19:
                    img = Properties.Resources._19;
                    break;
                case 20:
                    img = Properties.Resources._20;
                    break;
                case 21:
                    img = Properties.Resources._21;
                    break;
                case 22:
                    img = Properties.Resources._22;
                    break;
            }

            switch (Rotate)
            {
                case 1:
                    img.RotateFlip(RotateFlipType.Rotate90FlipNone);
                    break;
                case 2:
                    img.RotateFlip(RotateFlipType.Rotate180FlipNone);
                    break;
                case 3:
                    img.RotateFlip(RotateFlipType.Rotate270FlipNone);
                    break;
            }
            return img;
        }

        public void SetPieceInUse(int PieceNumber)
        {
            PieceNumber--;

            int BasePiece = PieceNumber % 256;
            PieceFormat[BasePiece, 2] = 1;
            PieceFormat[BasePiece + 256, 2] = 1;
            PieceFormat[BasePiece + 512, 2] = 1;
            PieceFormat[BasePiece + 768, 2] = 1;
        }

        public void ClearPieceInUse(int PieceNumber)
        {
            PieceNumber--;
            int BasePiece = PieceNumber % 256;
            PieceFormat[BasePiece, 2] = 0;
            PieceFormat[BasePiece + 256, 2] = 0;
            PieceFormat[BasePiece + 512, 2] = 0;
            PieceFormat[BasePiece + 768, 2] = 0;
        }

        public List<int> GetMatchingPieces(int Top, int Right, int Bottom, int Left)
        {
            List<int> result = new List<int>();

            for (int i = 0; i < 1024; i++)
            {
                if (((Top != -1) ? PieceFormat[i, 3] == Top : PieceFormat[i, 3] > 0) && ((Right != -1) ? PieceFormat[i, 4] == Right : PieceFormat[i, 4] > 0) && ((Bottom != -1) ? PieceFormat[i, 5] == Bottom : PieceFormat[i, 5] > 0) && ((Left != -1) ? PieceFormat[i, 6] == Left : PieceFormat[i, 6] > 0))
                {
                    if (PieceFormat[i, 2] == 0)
                        result.Add(PieceFormat[i, 0]);
                }
            }

            return result;
        }

        public int GetTop(int PNum)
        {
            return PieceFormat[PNum - 1, 3];
        }

        public int GetRight(int PNum)
        {
            return PieceFormat[PNum - 1, 4];
        }

        public int GetBottom(int PNum)
        {
            return PieceFormat[PNum - 1, 5];
        }

        public int GetLeft(int PNum)
        {
            return PieceFormat[PNum - 1, 6];
        }

        public bool IsClue(int Pnum)
        {
            return PieceFormat[Pnum - 1, 1] == 3;
        }

        public ImageList GetAllImages()
        {
            return BigBoard ? LargeImages : SmallImages;
        }
    }
}
